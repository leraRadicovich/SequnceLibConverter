@startuml
/'Процедура для отрисовки альтернативных сценариев alt'/
!unquoted procedure ALT($color, $description)
    !$type = "alt"
    %invoke_procedure("layerController", $type, $color, $description)
!endprocedure

/'Процедура для отрисовки опциональных сценариев opt'/
!unquoted procedure OPT($color,$description)
    !$type = "opt"
    %invoke_procedure("layerController", $type, $color, $description)
!endprocedure

/'Процедура для отрисовки параллельных сценариев par'/
!unquoted procedure PAR($color,$description)
    !$type = "par"
    %invoke_procedure("layerController", $type, $color, $description)
!endprocedure

/'Процедура для отрисовки группировки сценариев group'/
!unquoted procedure GROUP($color,$description)
    !$type = "group"
    %invoke_procedure("layerController", $type, $color, $description)
!endprocedure

/'Процедура для отрисовки зацикливания сценариев loop'/
!unquoted procedure LOOP($color,$description)
    !$type = "loop"
    %invoke_procedure("layerController", $type, $color, $description)
!endprocedure

/'Процедура для отрисовки еще одной развилки для текущего слоя layer'/
!unquoted procedure ELSE($color,$description)
    !$type = "else"
    %invoke_procedure("layerController", $type, $color, $description)
!endprocedure

/'Процедура для завершения любых не дефолтных сценариев end'/
!unquoted procedure END()
    !$type = "end"
    %invoke_procedure("layerController", $type, $color, $description)
!endprocedure

!unquoted procedure layerController($type, $color="", $description="")
    !if $type != "else"
        !if $type == "end"
            !$layerId = $layerId - 1
        !else
            !$layerId = $layerId + 1
        !endif
    !endif
    /'пробел'/
    !if $type != "end"
        !if $type != "else"
            %invoke_procedure("layerEntityMapBuilder", $layerId, $type)
        !endif
    !else
        !$removeId = %size($layerMap)
        !$layerMap = %json_remove($layerMap, $removeId)
    !endif
    /'пробел'/
    !$color = colorController($color)
    /'пробел'/
    %invoke_procedure("layerBuilder", $type, $color, $description)
    %invoke_procedure("layerOriginSyntaxBuilder", $type, $color, $description)
!endprocedure

/'Отрисовка слоев layers'/
!unquoted procedure layerBuilder($type, $color="", $description="")
    !if $type != "end"
$type $color $description
    !else
$type

    !endif
!endprocedure

!unquoted procedure layerEntityMapBuilder($layerId, $type)
    !$temp = {}
    !$temp = %json_add($temp, id, $layerId)
    !$temp = %json_add($temp, type, $type)
    !$layerMap = %json_add($layerMap, $temp)
!endprocedure

/'Сохранение слоев в оригинальном синтаксисе'/
!unquoted procedure layerOriginSyntaxBuilder($type, $color="", $description="")
    !if $diagramMode == "final"
    !$temp = {}
    !$temp = %json_add($temp, "type", "layer")
    !$temp = %json_add($temp, "subtype", $type)
    !$temp = %json_add($temp, "color", $color)
    !$temp = %json_add($temp, "description", $description)
    !$originalSyntaxMap = %json_add($originalSyntaxMap, $temp)
    !endif
!endprocedure